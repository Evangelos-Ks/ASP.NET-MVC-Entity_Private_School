@model Assignment2.Web.Models.CourseViewModel

@{
    ViewBag.Title = "Edit Course";
}

<h2>Edit course</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Course</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.CourseId)

    <div class="form-group">
        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Stream, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Stream, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Stream, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Type, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TuitionFees, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TuitionFees, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TuitionFees, "", new { @class = "text-danger" })
        </div>
    </div>

    @if (Model.TrainersForSubtraction.Count() > 0)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.TrainersForSubtraction, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.ListBoxFor(model => model.TrainersForSubtractionId, Model.TrainersForSubtraction, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TrainersForSubtractionId, "", new { @class = "text-danger" })
            </div>
        </div>
    }

    @if (Model.TrainersForAddition.Count() > 0)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.TrainersForAddition, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.ListBoxFor(model => model.TrainersForAdditionId, Model.TrainersForAddition, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TrainersForAdditionId, "", new { @class = "text-danger" })
            </div>
        </div>
    }

    @if (Model.StudentsForSubtraction.Count() > 0)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.StudentsForSubtraction, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.ListBoxFor(model => model.StudentsForSubtractionId, Model.StudentsForSubtraction, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StudentsForSubtractionId, "", new { @class = "text-danger" })
            </div>
        </div>
    }

    @if (Model.StudentsForAddition.Count() > 0)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.StudentsForAddition, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.ListBoxFor(model => model.StudentsForAdditionId, Model.StudentsForAddition, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StudentsForAdditionId, "", new { @class = "text-danger" })
            </div>
        </div>
    }

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-warning" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "AllCourses", null, new { @class = "btn btn-info" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
